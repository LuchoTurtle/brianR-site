---
import { Sun, Moon } from "@lucide/astro";
---

<button id="theme-toggle" class="relative w-14 h-8 bg-gradient-to-r cursor-pointer from-orange-400 to-yellow-400 dark:from-blue-600 dark:to-purple-600 rounded-full p-1 transition-all duration-300 shadow-lg hover:shadow-xl">
  <!-- Background gradient overlay -->
  <div class="absolute inset-0 bg-gradient-to-r from-orange-400/20 to-yellow-400/20 dark:from-blue-400/20 dark:to-purple-400/20 rounded-full blur-lg"></div>

  <!-- Toggle circle -->
  <div id="toggle-circle" class="relative w-6 h-6 bg-white dark:bg-slate-800 rounded-full shadow-lg transition-all duration-300 transform translate-x-0 flex items-center justify-center">
    <!-- Icons -->
    <Sun id="sun-icon" class="w-4 h-4 text-orange-500 absolute transition-all duration-300 opacity-100 rotate-0 scale-100" />
    <Moon id="moon-icon" class="w-4 h-4 text-blue-400 absolute transition-all duration-300 opacity-0 -rotate-180 scale-0" />
  </div>
</button>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const themeToggle = document.getElementById("theme-toggle");
    const toggleCircle = document.getElementById("toggle-circle");
    const sunIcon = document.getElementById("sun-icon");
    const moonIcon = document.getElementById("moon-icon");

    let isDark = false;

    // Check initial theme
    const savedTheme = localStorage.getItem("theme");
    const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;

    if (savedTheme) {
      isDark = savedTheme === "dark";
    } else {
      isDark = prefersDark;
    }

    // Apply initial theme
    document.documentElement.classList.toggle("dark", isDark);
    updateThemeUI(isDark);

    // Toggle theme function
    function toggleTheme() {
      isDark = !isDark;
      document.documentElement.classList.toggle("dark", isDark);
      localStorage.setItem("theme", isDark ? "dark" : "light");
      updateThemeUI(isDark);
    }

    // Update UI based on theme
    function updateThemeUI(dark: boolean) {
      if (toggleCircle && sunIcon && moonIcon) {
        if (dark) {
          // Dark mode
          toggleCircle.classList.add("translate-x-6");
          toggleCircle.classList.remove("translate-x-0");

          // Hide sun, show moon
          sunIcon.classList.add("opacity-0", "rotate-180", "scale-0");
          sunIcon.classList.remove("opacity-100", "rotate-0", "scale-100");

          moonIcon.classList.add("opacity-100", "rotate-0", "scale-100");
          moonIcon.classList.remove("opacity-0", "-rotate-180", "scale-0");
        } else {
          // Light mode
          toggleCircle.classList.add("translate-x-0");
          toggleCircle.classList.remove("translate-x-6");

          // Show sun, hide moon
          sunIcon.classList.add("opacity-100", "rotate-0", "scale-100");
          sunIcon.classList.remove("opacity-0", "rotate-180", "scale-0");

          moonIcon.classList.add("opacity-0", "-rotate-180", "scale-0");
          moonIcon.classList.remove("opacity-100", "rotate-0", "scale-100");
        }
      }
    }

    // Add click event listener
    if (themeToggle) {
      themeToggle.addEventListener("click", toggleTheme);
    }
  });
</script>

---
import Layout from "../layouts/Layout.astro";
import Scene from "../components/scene/Scene.astro";
import About from "../components/AboutSection.astro";
import Packages from "../components/PackagesSection.astro";
import Gallery from "../components/GallerySection.astro";
import Reviews from "../components/ReviewsSection.astro";
import Contact from "../components/ContactSection.astro";
import ThemeToggle from "../components/ThemeToggle.astro";
---

<Layout>
  {/* Skip to main content for screen readers */}
  <a href="#main-content" class="skip-link">Skip to main content</a>

  {/* Navigation - Starts transparent, becomes opaque when scrolling */}
  <nav id="main-nav" class="fixed top-0 left-0 right-0 z-50 transition-all duration-300" role="navigation" aria-label="Main navigation">
    <div class="max-w-7xl mx-auto px-6 py-4">
      <div class="flex justify-between items-center">
        {/* Title - Hidden when hero is visible, shown when scrolled */}
        <h1 id="nav-title" class="text-2xl font-bold text-white opacity-0 transform -translate-y-2 transition-all duration-300" aria-live="polite">DJ Brian Rodrigues</h1>

        <div class="flex items-center space-x-8">
          {/* Desktop Navigation Links */}
          <ul class="hidden md:flex space-x-8 list-none" role="menubar">
            <li role="none">
              <a href="#about" class="text-white/80 hover:text-white transition-colors focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-transparent rounded-sm px-2 py-1" role="menuitem"> About </a>
            </li>
            <li role="none">
              <a href="#packages" class="text-white/80 hover:text-white transition-colors focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-transparent rounded-sm px-2 py-1" role="menuitem"> Packages </a>
            </li>
            <li role="none">
              <a href="#gallery" class="text-white/80 hover:text-white transition-colors focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-transparent rounded-sm px-2 py-1" role="menuitem"> Gallery </a>
            </li>
            <li role="none">
              <a href="#reviews" class="text-white/80 hover:text-white transition-colors focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-transparent rounded-sm px-2 py-1" role="menuitem"> Reviews </a>
            </li>
            <li role="none">
              <a href="#contact" class="text-white/80 hover:text-white transition-colors focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-transparent rounded-sm px-2 py-1" role="menuitem"> Contact </a>
            </li>
          </ul>

          {/* Theme Toggle with accessible label */}
          <div aria-label="Theme toggle">
            <ThemeToggle />
          </div>
        </div>
      </div>
    </div>
  </nav>

  <main id="main-content" tabindex="-1">
    {/* Hero Section */}
    <section id="hero-scene" aria-label="Hero introduction">
      <Scene />
    </section>

    {/* Main Content Sections */}
    <About />
    <Packages />
    <Gallery />
    <Reviews />
    <Contact />
  </main>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const nav = document.getElementById("main-nav");
    const navTitle = document.getElementById("nav-title");
    const heroScene = document.getElementById("hero-scene");

    if (nav && navTitle && heroScene) {
      // Create intersection observer to detect when scene goes out of view
      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              // Scene is visible - remove background and hide title
              nav.classList.remove("bg-black/20", "dark:bg-black/20", "backdrop-blur-md", "border-b", "border-white/10");
              navTitle.classList.add("opacity-0", "-translate-y-2");
              navTitle.classList.remove("opacity-100", "translate-y-0");

              // Update aria-label when nav state changes
              nav.setAttribute("aria-label", "Main navigation - transparent mode");
            } else {
              // Scene is not visible - add background and show title
              nav.classList.add("bg-black/20", "dark:bg-black/20", "backdrop-blur-md", "border-b", "border-white/10");
              navTitle.classList.add("opacity-100", "translate-y-0");
              navTitle.classList.remove("opacity-0", "-translate-y-2");

              // Update aria-label when nav state changes
              nav.setAttribute("aria-label", "Main navigation - solid background");
            }
          });
        },
        {
          // Trigger when the scene is completely out of view
          threshold: 0,
          rootMargin: "-1px 0px 0px 0px", // Small negative margin to ensure it triggers when just past
        }
      );

      observer.observe(heroScene);
    }
  });
</script>
